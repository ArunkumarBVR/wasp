"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[3317],{85162:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(67294),o=a(86010);const r={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:a,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,o.Z)(r.tabItem,i),hidden:a},t)}},74866:(e,t,a)=>{a.d(t,{Z:()=>v});var n=a(87462),o=a(67294),r=a(86010),i=a(12466),s=a(16550),l=a(91980),p=a(67392),u=a(50012);function c(e){return function(e){return o.Children.map(e,(e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:o}}=e;return{value:t,label:a,attributes:n,default:o}}))}function d(e){const{values:t,children:a}=e;return(0,o.useMemo)((()=>{const e=t??c(a);return function(e){const t=(0,p.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function m(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:a}=e;const n=(0,s.k6)(),r=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,l._X)(r),(0,o.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(n.location.search);t.set(r,e),n.replace({...n.location,search:t.toString()})}),[r,n])]}function h(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,r=d(e),[i,s]=(0,o.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:r}))),[l,p]=g({queryString:a,groupId:n}),[c,h]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,r]=(0,u.Nk)(a);return[n,(0,o.useCallback)((e=>{a&&r.set(e)}),[a,r])]}({groupId:n}),k=(()=>{const e=l??c;return m({value:e,tabValues:r})?e:null})();(0,o.useLayoutEffect)((()=>{k&&s(k)}),[k]);return{selectedValue:i,selectValue:(0,o.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);s(e),p(e),h(e)}),[p,h,r]),tabValues:r}}var k=a(72389);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:t,block:a,selectedValue:s,selectValue:l,tabValues:p}=e;const u=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.o5)(),d=e=>{const t=e.currentTarget,a=u.indexOf(t),n=p[a].value;n!==s&&(c(t),l(n))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=u.indexOf(e.currentTarget)+1;t=u[a]??u[0];break}case"ArrowLeft":{const a=u.indexOf(e.currentTarget)-1;t=u[a]??u[u.length-1];break}}t?.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":a},t)},p.map((e=>{let{value:t,label:a,attributes:i}=e;return o.createElement("li",(0,n.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>u.push(e),onKeyDown:m,onClick:d},i,{className:(0,r.Z)("tabs__item",f.tabItem,i?.className,{"tabs__item--active":s===t})}),a??t)})))}function w(e){let{lazy:t,children:a,selectedValue:n}=e;const r=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===n));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function y(e){const t=h(e);return o.createElement("div",{className:(0,r.Z)("tabs-container",f.tabList)},o.createElement(b,(0,n.Z)({},e,t)),o.createElement(w,(0,n.Z)({},e,t)))}function v(e){const t=(0,k.Z)();return o.createElement(y,(0,n.Z)({key:String(t)},e))}},48863:(e,t,a)=>{a.d(t,{A:()=>i,v:()=>s});var n=a(67294),o=a(50012),r=a(70143);function i(e){let{children:t}=e;const[a]=(0,o.Nk)("docusaurus.tab.js-ts");return"ts"===a&&n.createElement(r.Z,null,t)}function s(e){let{children:t}=e;const[a]=(0,o.Nk)("docusaurus.tab.js-ts");return"js"===a&&n.createElement(r.Z,null,t)}},89763:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>u,default:()=>k,frontMatter:()=>p,metadata:()=>c,toc:()=>m});var n=a(87462),o=(a(67294),a(3905)),r=a(85162),i=a(74866),s=a(44996),l=a(48863);const p={id:"01-creating-new-project",title:"Creating a new project"},u=void 0,c={unversionedId:"tutorials/todo-app/01-creating-new-project",id:"tutorials/todo-app/01-creating-new-project",title:"Creating a new project",description:"Run the following command in your terminal to create a new Wasp project:",source:"@site/docs/tutorials/todo-app/01-creating-new-project.md",sourceDirName:"tutorials/todo-app",slug:"/tutorials/todo-app/01-creating-new-project",permalink:"/docs/tutorials/todo-app/01-creating-new-project",draft:!1,editUrl:"https://github.com/wasp-lang/wasp/edit/release/web/docs/tutorials/todo-app/01-creating-new-project.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"01-creating-new-project",title:"Creating a new project"},sidebar:"docs",previous:{title:"Introduction",permalink:"/docs/tutorials/todo-app"},next:{title:"Task entity",permalink:"/docs/tutorials/todo-app/02-task-entity"}},d={},m=[{value:"Taking a closer look at the code",id:"taking-a-closer-look-at-the-code",level:2},{value:"Cleaning up",id:"cleaning-up",level:2}],g={toc:m},h="wrapper";function k(e){let{components:t,...a}=e;return(0,o.kt)(h,(0,n.Z)({},g,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Run the following command in your terminal to create a new Wasp project:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"wasp new TodoApp\n")),(0,o.kt)("p",null,"Enter the created directory and run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"cd TodoApp\nwasp start\n")),(0,o.kt)("p",null,"You have just run your app in the development mode!"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("inlineCode",{parentName:"p"},"wasp start")," might take a little bit longer to finish when you run it for the first time due to the initial setup.")),(0,o.kt)("p",null,"You will be seeing a lot of different output from the client, server and database setting themselves up.\nOnce ready, a new tab should open in your browser at ",(0,o.kt)("inlineCode",{parentName:"p"},"http://localhost:3000"),", with a simple placeholder page:"),(0,o.kt)("img",{alt:"Screenshot of new Wasp app",src:(0,s.Z)("img/wasp-new-screenshot.png"),style:{border:"1px solid black"},height:"400px"}),(0,o.kt)("p",null,"We just set the foundations of our app! We don't have yet the features to show it, but Wasp has already generated for us the full front-end and back-end code of the app. Take a peek at ",(0,o.kt)("inlineCode",{parentName:"p"},"TodoApp/.wasp/out")," if you are curious and want to see what it looks like!"),(0,o.kt)("h2",{id:"taking-a-closer-look-at-the-code"},"Taking a closer look at the code"),(0,o.kt)("p",null,"Let's inspect the Wasp project we just created:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},".\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 main.wasp             # Your wasp code goes here.\n\u251c\u2500\u2500 src\n\u2502\xa0\xa0 \u251c\u2500\u2500 client            # Your client code (JS/CSS/HTML) goes here.\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 Main.css\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 MainPage.jsx\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 vite-env.d.ts\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 tsconfig.json\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 waspLogo.png\n\u2502\xa0\xa0 \u251c\u2500\u2500 server            # Your server code (Node JS) goes here.\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 tsconfig.json\n\u2502\xa0\xa0 \u251c\u2500\u2500 shared            # Your shared (runtime independent) code goes here .\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 tsconfig.json\n\u2502\xa0\xa0 \u2514\u2500\u2500 .waspignore\n\u2514\u2500\u2500 .wasproot\n")),(0,o.kt)("p",null,"By ",(0,o.kt)("em",{parentName:"p"},"your code"),", we mean ",(0,o.kt)("em",{parentName:"p"},'"the code you write"')," (as opposed to the code generated by Wasp). Wasp expects you to separate all external code into three folders to make it clear which runtime executes what:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"src/server")," - Contains the code executed on the server (i.e., in Node)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"src/client")," - Contains the code executed on the client (i.e., JS in the browser)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"src/shared")," - Contains the code you want to use on both the client and the server (e.g., runtime-independent utility functions)")),(0,o.kt)("p",null,"You may be wondering what about the rest of the generated files (",(0,o.kt)("inlineCode",{parentName:"p"},"tsconfig.json"),"\nand ",(0,o.kt)("inlineCode",{parentName:"p"},"vite-env.d.ts"),"? Your IDE needs them to improve your development\nexperience (i.e., autocompletion, intellisense, etc.), so it's best to leave\nthem alone (for now)."),(0,o.kt)("admonition",{title:"Typescript Support",type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Wasp supports Typescript out of the box but you are free to use JavaScript (js/jsx)\nor TypeScript (ts/tsx) as you see fit. No extra configuration is needed!"),(0,o.kt)("p",{parentName:"admonition"},"We'll provide you with both JavaScript and TypeScript snippets for each feature we cover."),(0,o.kt)("p",{parentName:"admonition"},"Code blocks have a toggle between vanilla \ud83c\udf66 Javascript/JSX and Typescript/TSX."),(0,o.kt)("p",{parentName:"admonition"},"To see how to get the most out of Wasp and TypeScript, take a look at ",(0,o.kt)("a",{parentName:"p",href:"/docs/typescript"},"our\nTypeScript doc"),". It contains a list of all TypeScript features\nWasp currently supports.")),(0,o.kt)("p",null,"Let's start with the ",(0,o.kt)("inlineCode",{parentName:"p"},"main.wasp")," file, which introduces 3 new concepts:\n",(0,o.kt)("a",{parentName:"p",href:"/docs/language/features#app"},"app"),",\n",(0,o.kt)("a",{parentName:"p",href:"/docs/language/features#page"},"page")," and\n",(0,o.kt)("a",{parentName:"p",href:"/docs/language/features#route"},"route"),"."),(0,o.kt)(i.Z,{groupId:"js-ts",mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},'app TodoApp { // Main declaration, defines a new web app.\n  wasp: {\n    version: "^0.11.0"\n  },\n  title: "Todo app" // Used as a browser tab title.\n}\n\nroute RootRoute { path: "/", to: MainPage } // Render page MainPage on url `/`\n\npage MainPage {\n  // We specify that ReactJS implementation of our page can be found in\n  // `src/client/MainPage.jsx` as a default export (uses standard js import syntax).\n  // Use \'@client\' to reference files inside the src/client folder.\n  component: import Main from "@client/MainPage.jsx"\n}\n'))),(0,o.kt)(r.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},'app TodoApp { // Main declaration, defines a new web app.\n  wasp: {\n    version: "^0.11.0"\n  },\n  title: "Todo app" // Used as a browser tab title.\n}\n\nroute RootRoute { path: "/", to: MainPage } // Render page MainPage on url `/`\n\npage MainPage {\n  // We specify that ReactJS implementation of our page can be found in\n  // `src/client/MainPage.tsx` as a default export (uses standard JS import syntax).\n  // Use \'@client\' to reference files inside the src/client folder.\n  component: import Main from "@client/MainPage.tsx"\n}\n')))),(0,o.kt)(l.A,{mdxType:"ShowForTs"},(0,o.kt)("admonition",{title:"Using TypeScript",type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"If you are using Typescript, you will need to rename ",(0,o.kt)("inlineCode",{parentName:"p"},"MainPage.jsx")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"MainPage.tsx"),"."))),(0,o.kt)("p",null,"Let's now take a look at that React component we referenced in the ",(0,o.kt)("inlineCode",{parentName:"p"},"page MainPage { ... }")," declaration in ",(0,o.kt)("inlineCode",{parentName:"p"},"main.wasp"),":"),(0,o.kt)(i.Z,{groupId:"js-ts",mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="src/client/MainPage.jsx"',title:'"src/client/MainPage.jsx"'},"import waspLogo from './waspLogo.png'\nimport './Main.css'\n\nconst MainPage = () => {\n  ...\n}\nexport default MainPage\n"))),(0,o.kt)(r.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/client/MainPage.tsx"',title:'"src/client/MainPage.tsx"'},"import waspLogo from './waspLogo.png'\nimport './Main.css'\n\nconst MainPage = () => {\n  ...\n}\nexport default MainPage\n")))),(0,o.kt)("p",null,"As we can see, this is simply a functional React component that uses the CSS and Wasp logo files sitting next to it in the ",(0,o.kt)("inlineCode",{parentName:"p"},"src/client")," dir."),(0,o.kt)("p",null,"This is all the code we need!\nWasp quietly takes care of everything else necessary to define, build, and run a web app."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("inlineCode",{parentName:"p"},"wasp start")," automatically picks up the changes you make and restarts the app, so keep it running.")),(0,o.kt)("h2",{id:"cleaning-up"},"Cleaning up"),(0,o.kt)("p",null,"Let's make our first changes!"),(0,o.kt)("p",null,"To prepare the clean slate for building the TodoApp, delete the files ",(0,o.kt)("inlineCode",{parentName:"p"},"Main.css"),"\nand ",(0,o.kt)("inlineCode",{parentName:"p"},"waspLogo.png")," from the ",(0,o.kt)("inlineCode",{parentName:"p"},"src/client/")," folder (",(0,o.kt)("inlineCode",{parentName:"p"},"src/shared")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"src/server"),"\nare already clean). Wasp needs the ",(0,o.kt)("inlineCode",{parentName:"p"},"tsconfig.json")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"vite-env.d.ts")," for\nIDE support, so it's important to keep them."),(0,o.kt)("p",null,"Next, let's make the ",(0,o.kt)("inlineCode",{parentName:"p"},"MainPage")," component much simpler:"),(0,o.kt)(i.Z,{groupId:"js-ts",mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="src/client/MainPage.jsx"',title:'"src/client/MainPage.jsx"'},"const MainPage = () => {\n  return <div>Hello world!</div>\n}\n\nexport default MainPage\n"))),(0,o.kt)(r.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/client/MainPage.tsx"',title:'"src/client/MainPage.tsx"'},"const MainPage = () => {\n  return <div>Hello world!</div>\n}\n\nexport default MainPage\n")))),(0,o.kt)("p",null,"At this point, you should see something like this:"),(0,o.kt)("img",{alt:"Todo App - Hello World",src:(0,s.Z)("img/todo-app-hello-world.png"),style:{border:"1px solid black"}}),(0,o.kt)("p",null,"Ok, time to take the next step - implementing some real Todo app features!"))}k.isMDXComponent=!0}}]);