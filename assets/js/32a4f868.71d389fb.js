"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[3740],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=s(n),h=i,m=c["".concat(u,".").concat(h)]||c[h]||d[h]||a;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=h;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[c]="string"==typeof e?e:i,o[1]=l;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},1673:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>u,toc:()=>p});var r=n(87462),i=(n(67294),n(3905)),a=n(44996);const o={title:"GitHub"},l="GitHub",u={unversionedId:"integrations/github",id:"integrations/github",title:"GitHub",description:"To implement GitHub Auth, you'll need to add the Auth object with the following configuration to your main.wasp file:",source:"@site/docs/integrations/github.md",sourceDirName:"integrations",slug:"/integrations/github",permalink:"/docs/integrations/github",draft:!1,editUrl:"https://github.com/wasp-lang/wasp/edit/release/web/docs/integrations/github.md",tags:[],version:"current",frontMatter:{title:"GitHub"},sidebar:"docs",previous:{title:"Auth UI",permalink:"/docs/guides/auth-ui"},next:{title:"Google",permalink:"/docs/integrations/google"}},s={},p=[{value:"GitHub Auth",id:"github-auth",level:2}],c={toc:p},d="wrapper";function h(e){let{components:t,...n}=e;return(0,i.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"github"},"GitHub"),(0,i.kt)("p",null,"To implement GitHub Auth, you'll need to add the Auth object with the following configuration to your ",(0,i.kt)("inlineCode",{parentName:"p"},"main.wasp")," file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},'app Example {\n  wasp: {\n    version: "^0.8.0"\n  },\n\n  title: "Example",\n\n  auth: {\n    userEntity: User,\n    externalAuthEntity: SocialLogin,\n    methods: {\n      gitHub: {}\n    },\n    onAuthFailedRedirectTo: "/login"\n  },\n}\n\n//...\n\nentity User {=psl\n    id          Int     @id @default(autoincrement())\n    // ...\n    externalAuthAssociations  SocialLogin[]\npsl=}\n\nentity SocialLogin {=psl\n  id          Int       @id @default(autoincrement())\n  provider    String\n  providerId  String\n  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n  userId      Int\n  createdAt   DateTime  @default(now())\n  @@unique([provider, providerId, userId])\npsl=}\n')),(0,i.kt)("p",null,"For more info on the specific fields, check out this ",(0,i.kt)("a",{parentName:"p",href:"../language/features#social-login-providers-oauth-20"},"Auth")," section of the docs."),(0,i.kt)("p",null,"If you're adding a new entity to your ",(0,i.kt)("inlineCode",{parentName:"p"},".wasp")," file, make sure you migrate your database schema:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"wasp db migrate-dev\n")),(0,i.kt)("p",null,"You'll also need to add these environment variables to your ",(0,i.kt)("inlineCode",{parentName:"p"},".env.server")," file at the root of your project:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=".env.server"',title:'".env.server"'},"GITHUB_CLIENT_ID=your-github-client-id\nGITHUB_CLIENT_SECRET=your-github-client-secret\n\nJWT_SECRET=random-string-at-least-32-characters-long.\n")),(0,i.kt)("p",null,"We will cover how to get these values in the next section."),(0,i.kt)("h2",{id:"github-auth"},"GitHub Auth"),(0,i.kt)("p",null,"To use GitHub as an authentication method (covered ",(0,i.kt)("a",{parentName:"p",href:"/docs/language/features#social-login-providers-oauth-20"},"here"),"), you'll first need to create a GitHub OAuth App and provide Wasp with your client key and secret. Here is how to do so:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Log into your GitHub account and navigate to: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/settings/developers"},"https://github.com/settings/developers"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},'Select "New OAuth App"')),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Supply required information"),(0,i.kt)("img",{alt:"GitHub Applications Screenshot",src:(0,a.Z)("img/integrations-github-1.png"),width:"400px"}))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'For "Authorization callback URL", if you just want to test your local app, put in: ',(0,i.kt)("inlineCode",{parentName:"li"},"http://localhost:3000/auth/login/github")),(0,i.kt)("li",{parentName:"ul"},"Once you know on which URL your API server will be deployed, you can create a new app with that URL instead.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"For example: ",(0,i.kt)("inlineCode",{parentName:"li"},"https://someotherhost.com/auth/login/github"))))),(0,i.kt)("ol",{start:4},(0,i.kt)("li",{parentName:"ol"},'Hit "Register application"'),(0,i.kt)("li",{parentName:"ol"},"Copy your Client ID and Client secret, and paste them into your environment variables named ",(0,i.kt)("inlineCode",{parentName:"li"},"GITHUB_CLIENT_ID")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"GITHUB_CLIENT_SECRET"),"in your ",(0,i.kt)("inlineCode",{parentName:"li"},".env.server")," file."),(0,i.kt)("li",{parentName:"ol"},"Now when youre user logs in with GitHub, you can access the logged in user on the client via the ",(0,i.kt)("inlineCode",{parentName:"li"},"useAuth()")," hook, and on the server via the ",(0,i.kt)("inlineCode",{parentName:"li"},"context.user")," object as described ",(0,i.kt)("a",{parentName:"li",href:"/docs/language/features#accessing-the-currently-logged-in-user"},"here"),"!")))}h.isMDXComponent=!0}}]);