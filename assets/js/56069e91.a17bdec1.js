"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[7382],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>x});var a=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var o=a.createContext({}),c=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return a.createElement(o.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,o=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),p=c(n),m=s,x=p["".concat(o,".").concat(m)]||p[m]||d[m]||r;return n?a.createElement(x,i(i({ref:t},l),{},{components:n})):a.createElement(x,i({ref:t},l))}));function x(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,i=new Array(r);i[0]=m;var u={};for(var o in t)hasOwnProperty.call(t,o)&&(u[o]=t[o]);u.originalType=e,u[p]="string"==typeof e?e:s,i[1]=u;for(var c=2;c<r;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},46300:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(67294),s=n(50012);function r(e){let{path:t}=e;const[n]=(0,s.Nk)("docusaurus.tab.js-ts"),r=t.lastIndexOf("{"),i=t.slice(r+1,t.length-1),[u,o]=i.split(","),c=t.slice(0,r);return a.createElement("code",null,c+("js"===n?u:o))}},54318:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>u,toc:()=>c});var a=n(87462),s=(n(67294),n(3905));n(46300),n(44996);const r={id:"04-updating-main-page-js-file",title:"Updating MainPage.js file"},i=void 0,u={unversionedId:"tutorials/dev-excuses-app/04-updating-main-page-js-file",id:"tutorials/dev-excuses-app/04-updating-main-page-js-file",title:"Updating MainPage.js file",description:"This is the most complex part, but it really comes down to mostly writing React. To make our life easier - let\u2019s erase everything we had in the MainPage.js file and substitute it with our new UI markup.",source:"@site/docs/tutorials/dev-excuses-app/04-updating-main-page-js-file.md",sourceDirName:"tutorials/dev-excuses-app",slug:"/tutorials/dev-excuses-app/04-updating-main-page-js-file",permalink:"/docs/tutorials/dev-excuses-app/04-updating-main-page-js-file",draft:!1,editUrl:"https://github.com/wasp-lang/wasp/edit/release/web/docs/tutorials/dev-excuses-app/04-updating-main-page-js-file.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"04-updating-main-page-js-file",title:"Updating MainPage.js file"}},o={},c=[],l={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,s.kt)(p,(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"This is the most complex part, but it really comes down to mostly writing React. To make our life easier - let\u2019s erase everything we had in the ",(0,s.kt)("inlineCode",{parentName:"p"},"MainPage.js")," file and substitute it with our new UI markup."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title=".../ext/MainPage.js | Updating the UI"',title:'".../ext/MainPage.js',"|":!0,Updating:!0,the:!0,'UI"':!0},"import React, { useState } from 'react'\nimport { useQuery } from '@wasp/queries'\nimport getExcuse from '@wasp/queries/getExcuse'\nimport getAllSavedExcuses from '@wasp/queries/getAllSavedExcuses'\nimport saveExcuse from '@wasp/actions/saveExcuse'\n\nconst MainPage = () => {\n  const [currentExcuse, setCurrentExcuse] = useState({ text: \"\" })\n  const { data: excuses } = useQuery(getAllSavedExcuses)\n\n  const handleGetExcuse = async () => {\n    try {\n      setCurrentExcuse(await getExcuse())\n    } catch (err) {\n      window.alert('Error while getting the excuse: ' + err.message)\n    }\n  }\n\n  const handleSaveExcuse = async () => {\n    if (currentExcuse.text) {\n      try {\n        await saveExcuse(currentExcuse)\n      } catch (err) {\n        window.alert('Error while saving the excuse: ' + err.message)\n      }\n    }\n  }\n\n  return (\n    <div className=\"grid grid-cols-2 text-3xl\">\n      <div>\n          <button onClick={handleGetExcuse} className=\"mx-2 my-1 p-2 bg-blue-600 hover:bg-blue-400 text-white rounded\"> Get excuse </button>\n          <button onClick={handleSaveExcuse} className=\"mx-2 my-1 p-2 bg-blue-600 hover:bg-blue-400 text-white rounded\"> Save excuse </button>\n        <Excuse excuse={currentExcuse} />\n      </div>\n      <div>\n        <div className=\"px-6 py-2 bg-blue-600 text-white\"> Saved excuses: </div>\n        {excuses && <ExcuseList excuses={excuses} />}\n      </div>\n    </div>\n  )\n}\n\nconst ExcuseList = (props) => { \n  return props.excuses?.length ?  props.excuses.map((excuse, idx) => <Excuse excuse={excuse} key={idx} />) : 'No saved excuses'\n}\n\nconst Excuse = ({ excuse }) => {\n  return (\n    <div className=\"px-6 py-2\">\n      {excuse.text}\n    </div>\n  )\n}\n\nexport default MainPage\n")),(0,s.kt)("p",null,"Our page consists of three components: ",(0,s.kt)("inlineCode",{parentName:"p"},"MainPage"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"ExcuseList"),", and ",(0,s.kt)("inlineCode",{parentName:"p"},"Excuse"),". It may seem at first that this file is pretty complex, but let's take a closer look: "),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"Excuse")," is just a div with an excuse text, ",(0,s.kt)("inlineCode",{parentName:"p"},"ExcuseList")," checks if there are any excuses. If the list is empty \u2013 show a message ",(0,s.kt)("inlineCode",{parentName:"p"},"No saved excuses"),". In other case \u2013 excuses will be displayed. "),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"MainPage")," contains info about the current excuses and the list of already saved excuses. Two button click handlers are ",(0,s.kt)("inlineCode",{parentName:"p"},"handleGetExcuse")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"handleSaveExcuse"),". Plus, the markup itself with some Tailwind flavor."))}d.isMDXComponent=!0}}]);